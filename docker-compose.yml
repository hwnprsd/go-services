version: "3.8"

services:
  workers:
    container_name: "flaq-workers"
    image: 312136753954.dkr.ecr.ap-south-1.amazonaws.com/flaq-workers
    build:
      context: ./workers
    environment:
      AMQP_SERVER_URL: ${AMQP_SERVER_URL}
      ETH_RPC_URL: ${ETH_RPC_URL}
      CONTRACT_ADDRESS: ${CONTRACT_ADDRESS}
      CONTRACT_ADDRESS_QUIZ: ${CONTRACT_ADDRESS_QUIZ}
      CHAIN_ID: ${CHAIN_ID}
      PRIVATE_KEY: ${PRIVATE_KEY}
      PG_HOST: ${PG_HOST}
      PG_USERNAME: ${PG_USERNAME}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_PORT: ${PG_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_HOST: ${SMTP_HOST}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-region: ap-south-1
        awslogs-group: flaqloggroup
    networks:
      - flaq_net

  api:
    container_name: "flaq-api"
    image: 312136753954.dkr.ecr.ap-south-1.amazonaws.com/flaq-api
    build:
      context: ./api
    environment:
      AMQP_SERVER_URL: ${AMQP_SERVER_URL}
      PG_HOST: ${PG_HOST}
      PG_USERNAME: ${PG_USERNAME}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_PORT: ${PG_PORT}
      POAP_MINT_SECRET: ${POAP_MINT_SECRET}
      SCRAPER_TOKEN: ${SCRAPER_TOKEN}
      GAUTH_CLIENT_KEY: ${GAUTH_CLIENT_KEY}
      GAUTH_SECRET: ${GAUTH_SECRET}
      GAUTH_CALLBACK_URL: ${GAUTH_CALLBACK_URL}
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-region: ap-south-1
        awslogs-group: flaqloggroup
    ports:
      - 3000:3000
    networks:
      - flaq_net

  scheduler:
    container_name: "scheduler"
    image: 312136753954.dkr.ecr.ap-south-1.amazonaws.com/flaq-scheduler
    build:
      context: ./scheduler
    environment:
      AMQP_SERVER_URL: ${AMQP_SERVER_URL}
      REDIS_URL: ${REDIS_URL}
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-region: ap-south-1
        awslogs-group: flaqloggroup
    networks:
      - flaq_net

networks:
  flaq_net:
    driver: bridge

x-aws-cloudformation:
  Resources:
    WebappTCP443Listener:
      Type: "AWS::ElasticLoadBalancingV2::Listener"
      Properties:
        LoadBalancerArn:
          Ref: LoadBalancer
        DefaultActions:
          - ForwardConfig:
              TargetGroups:
                - TargetGroupArn:
                    Ref: ApiTCP3000TargetGroup
            Type: forward
        Certificates:
          - CertificateArn: "arn:aws:acm:ap-south-1:312136753954:certificate/f5763aa6-5c97-4b40-9b7b-2aa01e7ac0a1"
        Protocol: TLS
        Port: 443
# vpc-0ddb1d66
#
#  subnet-5f816e34
# |  subnet-f8781f83
# |  subnet-c4aaf788
#
